---
import Socials from "../components/Socials.astro";

const navbarUrls = [
  { href: "/", text: "home" },
  { href: "/about", text: "about me" },
  { href: "/blog", text: "blog" },
];

const isCurrentPage = (url: string) => {
  let pathname = Astro.url.pathname;
  if (pathname.length > 1 && pathname.endsWith("/")) {
    pathname = pathname.slice(0, pathname.length - 1);
  }

  return pathname === (url.startsWith("/") ? url : "/" + url);
};

const shouldShowSocials = Astro.url.pathname !== "/links";
---

<aside
  class="sticky top-0 md:top-16 flex md:flex-col justify-center md:justify-start items-center z-50 md:pt-10 bg-[var(--night)]"
>
  <nav class="sticky top-0 md:top-16 pt-4 md:pt-0 flex md:flex-col gap-2">
    {
      navbarUrls.map(({ href, text }) => (
        <a
          class={`text-xl whitespace-nowrap transition-colors hover:text-neutral-50 p-2 text-right ${
            isCurrentPage(href)
              ? "text-neutral-50 border-b-zinc-300 underline underline-offset-8"
              : "text-neutral-600"
          }`}
          href={href}
        >
          {text}
        </a>
      ))
    }

    <a
      class={`md:hidden text-xl whitespace-nowrap transition-colors hover:text-neutral-50 p-2 text-right ${
        isCurrentPage("links")
          ? "text-neutral-50 border-b-zinc-300 underline underline-offset-8"
          : "text-neutral-600"
      }`}
      href="/links"
    >
      links
    </a>

    {
      shouldShowSocials && (
        <div class="hidden md:block md:mt-20">
          <Socials />
        </div>
      )
    }
  </nav>
</aside>
