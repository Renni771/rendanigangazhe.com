---
import Socials from "../components/Socials.astro";

const navbarUrls = [
  { href: "/", text: "home" },
  { href: "/about", text: "about me" },
  { href: "/blog", text: "blog" },
];

const isCurrentPage = (url: string) => {
  let pathname = Astro.url.pathname;
  if (pathname.length > 1 && pathname.endsWith("/")) {
    pathname = pathname.slice(0, pathname.length - 1);
  }

  return pathname === (url.startsWith("/") ? url : "/" + url);
};

const shouldShowSocials = Astro.url.pathname !== "/links";
---

<aside class="sticky top-0 flex md:flex-col bg-[var(--night)] z-50">
  <div>
    <nav class="flex md:flex-col md:justify-evenly gap-2">
      {
        navbarUrls.map(({ href, text }) => (
          <a
            class={`text-xl whitespace-nowrap transition-colors hover:text-neutral-50 p-2 text-right ${
              isCurrentPage(href)
                ? "text-neutral-50 border-b-zinc-300 border-b-2"
                : "text-neutral-600"
            }`}
            href={href}
          >
            {text}
          </a>
        ))
      }
      <a
        class={`md:hidden text-xl whitespace-nowrap transition-colors hover:text-neutral-50 p-2 text-right ${
          isCurrentPage("links")
            ? "text-neutral-50 border-b-zinc-300 border-b-2"
            : "text-neutral-600"
        }`}
        href="/links"
      >
        links
      </a>
    </nav>

    {
      shouldShowSocials && (
        <div class="hidden md:block md:mt-20">
          <Socials />
        </div>
      )
    }
  </div>
</aside>
